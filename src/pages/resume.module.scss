@use '../resources/variables' as *;
@use 'sass:math';

// px to mm assuming a device pixel ratio of 1
@function pxToMm($px) {
  @return $px * 25.4 * 1mm
}

$maxPageWidth: 210mm;

.downloadPdf {
  text-align: center;

  @media (width >= calc(#{$maxPageWidth} + 128px)) {
    margin: 64px 0;
  }
}

.page {
  --red: #{$red};
  --blue: #{$blue};

  --safety-margin: 1cm;

  @media not print {
    @media (min-width: calc(#{$maxPageWidth} + 128px)) {
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
      max-width: #{$maxPageWidth};
      margin: 64px auto;
      border-radius: 4px;
      overflow: hidden;
    }

    @media (max-width: 600px) {
      --safety-margin: 16px;
    }
  }

  h2 {
    margin-top: 1cm;
    font-size: 25px;
    background: var(--blue);
    color: white;
    padding: 2px 16px;
    font-family: $title-font;
  }

  h3:not(:first-of-type) {
    margin-top: 16px;
  }

  h2 + h3 {
    margin-top: 0;
  }
}

.header {
  display: flex;
  background: $red;
  color: white;
  padding: var(--safety-margin) var(--safety-margin) 0;
}

$asideIdealWidth: 5.5cm;

$imgBottomNegMargin: 16px;
$imgShadowOffset: 16px;
$imgBottomOverflow: $imgBottomNegMargin + $imgShadowOffset;

.picture {
  $imgHeight: 216px + 32px;
  --shadow-offset: 16px;

  display: flex;
  margin: 0 16px -16px 0;
  height: $imgHeight;
  width: $asideIdealWidth - $imgShadowOffset;
  position: relative;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: relative;
    z-index: 1;
  }

  &::after {
    content: '';
    position: absolute;
    background: var(--blue);
    height: 100%;
    width: 100%;
    left: #{$imgShadowOffset};
    top: #{$imgShadowOffset};
  }
}

@media (max-width: 446px) {
  .picture {
    display: none;
  }

  .header {
    padding: calc(var(--safety-margin) * 2) var(--safety-margin);
  }
}

.about {
  margin-left: var(--safety-margin);

  p {
    margin: 8px 0 0;
  }
}

.name {
  font-family: $title-font;
  margin: 0 0 16px 0;
}

.contactInfo {
  margin-left: 4px;

  p {
    display: flex;
    align-items: center;
    gap: 8px;
  }
}

.hint {
  font-size: 12px;
}

$mainHorizontalPadding: 1cm;
$maxMainWidth: $maxPageWidth - ($mainHorizontalPadding * 2);

.main {
  background: $white;
  --color: black;
  color: black;
  overflow: hidden;
  padding: 0.3cm var(--safety-margin) 1cm;

  ul {
    font-size: 14px;
  }
}

$colGap: 1cm;

.mainCols {
  display: flex;
  flex-wrap: wrap;
  column-gap: $colGap;
}

.mainLeftCol {
  flex: 1 0 $asideIdealWidth;
  width: 100%;
}

.mainRightCol {
  margin-left: auto;
  width: 100%;

  --max-main-width: #{$maxMainWidth};
  --col-gap: #{$colGap};
  --aisde: #{$asideIdealWidth};
  flex: 11000 1 #{$maxMainWidth - $colGap - $asideIdealWidth - 1cm};

  h2 {
    display: inline-block;
  }
}

.section {
  //break-inside: avoid;
}

.experience {
  h3 {
    margin-bottom: 0;
  }

  > div{  break-inside: avoid;}
}

.expYears {
  margin: 0;
  font-style: italic;

  font-size: 12px;
}

.expDesc {
  font-size: 14px;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.languages {
  margin: 0;

  dt {
    font-weight: bold;

    &::after {
      content: ':';
    }
  }

  dd {
    margin-left: 8px;
  }

  > div {
    display: flex;
  }
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  font-size: 14px;
  margin-top: 8px;
  margin-bottom: 0;
}

.tag {
  display: inline-block;
  background: $red;
  border-radius: 4px;
  padding: 1px 6px;
  color: white;
}

.footer {
  img {
    width: 1cm;
    height: 1cm;
  }

  @media print {
    position: fixed;
    bottom: 1cm;
    left: 1cm;

    // broken on .. all browsers :(
    //&::after {
    //  content: counter(page) " of " counter(pages);
    //  counter-increment: page;
    //}
  }
}

@media print {
  html[data-template="resume"] {
    --background: white;
    color-adjust: exact;
  }

  .main {
    background: transparent;
  }
}
